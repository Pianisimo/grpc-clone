// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: interference.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Interference
type InterferenceResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	InterferenceInfo []*InterferenceData    `protobuf:"bytes,1,rep,name=interference_info,json=interferenceInfo,proto3" json:"interference_info,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InterferenceResponse) Reset() {
	*x = InterferenceResponse{}
	mi := &file_interference_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterferenceResponse) ProtoMessage() {}

func (x *InterferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_interference_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterferenceResponse.ProtoReflect.Descriptor instead.
func (*InterferenceResponse) Descriptor() ([]byte, []int) {
	return file_interference_proto_rawDescGZIP(), []int{0}
}

func (x *InterferenceResponse) GetInterferenceInfo() []*InterferenceData {
	if x != nil {
		return x.InterferenceInfo
	}
	return nil
}

type InterferenceData struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NeighborSsid    string                 `protobuf:"bytes,1,opt,name=neighbor_ssid,json=neighborSsid,proto3" json:"neighbor_ssid,omitempty"`
	NeighborChannel string                 `protobuf:"bytes,2,opt,name=neighbor_channel,json=neighborChannel,proto3" json:"neighbor_channel,omitempty"`
	NeighborSignal  string                 `protobuf:"bytes,3,opt,name=neighbor_signal,json=neighborSignal,proto3" json:"neighbor_signal,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InterferenceData) Reset() {
	*x = InterferenceData{}
	mi := &file_interference_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterferenceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterferenceData) ProtoMessage() {}

func (x *InterferenceData) ProtoReflect() protoreflect.Message {
	mi := &file_interference_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterferenceData.ProtoReflect.Descriptor instead.
func (*InterferenceData) Descriptor() ([]byte, []int) {
	return file_interference_proto_rawDescGZIP(), []int{1}
}

func (x *InterferenceData) GetNeighborSsid() string {
	if x != nil {
		return x.NeighborSsid
	}
	return ""
}

func (x *InterferenceData) GetNeighborChannel() string {
	if x != nil {
		return x.NeighborChannel
	}
	return ""
}

func (x *InterferenceData) GetNeighborSignal() string {
	if x != nil {
		return x.NeighborSignal
	}
	return ""
}

var File_interference_proto protoreflect.FileDescriptor

const file_interference_proto_rawDesc = "" +
	"\n" +
	"\x12interference.proto\x12\bselfcare\"_\n" +
	"\x14InterferenceResponse\x12G\n" +
	"\x11interference_info\x18\x01 \x03(\v2\x1a.selfcare.InterferenceDataR\x10interferenceInfo\"\x8b\x01\n" +
	"\x10InterferenceData\x12#\n" +
	"\rneighbor_ssid\x18\x01 \x01(\tR\fneighborSsid\x12)\n" +
	"\x10neighbor_channel\x18\x02 \x01(\tR\x0fneighborChannel\x12'\n" +
	"\x0fneighbor_signal\x18\x03 \x01(\tR\x0eneighborSignalB\n" +
	"Z\bpkg/gen/b\x06proto3"

var (
	file_interference_proto_rawDescOnce sync.Once
	file_interference_proto_rawDescData []byte
)

func file_interference_proto_rawDescGZIP() []byte {
	file_interference_proto_rawDescOnce.Do(func() {
		file_interference_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_interference_proto_rawDesc), len(file_interference_proto_rawDesc)))
	})
	return file_interference_proto_rawDescData
}

var file_interference_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_interference_proto_goTypes = []any{
	(*InterferenceResponse)(nil), // 0: selfcare.InterferenceResponse
	(*InterferenceData)(nil),     // 1: selfcare.InterferenceData
}
var file_interference_proto_depIdxs = []int32{
	1, // 0: selfcare.InterferenceResponse.interference_info:type_name -> selfcare.InterferenceData
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_interference_proto_init() }
func file_interference_proto_init() {
	if File_interference_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_interference_proto_rawDesc), len(file_interference_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_interference_proto_goTypes,
		DependencyIndexes: file_interference_proto_depIdxs,
		MessageInfos:      file_interference_proto_msgTypes,
	}.Build()
	File_interference_proto = out.File
	file_interference_proto_goTypes = nil
	file_interference_proto_depIdxs = nil
}
