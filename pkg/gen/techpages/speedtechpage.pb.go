// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: techpages/speedtechpage.proto

package techpages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TypeofSpeed int32

const (
	TypeofSpeed_tcp      TypeofSpeed = 0
	TypeofSpeed_udp      TypeofSpeed = 1
	TypeofSpeed_download TypeofSpeed = 2
	TypeofSpeed_upload   TypeofSpeed = 3
)

// Enum value maps for TypeofSpeed.
var (
	TypeofSpeed_name = map[int32]string{
		0: "tcp",
		1: "udp",
		2: "download",
		3: "upload",
	}
	TypeofSpeed_value = map[string]int32{
		"tcp":      0,
		"udp":      1,
		"download": 2,
		"upload":   3,
	}
)

func (x TypeofSpeed) Enum() *TypeofSpeed {
	p := new(TypeofSpeed)
	*p = x
	return p
}

func (x TypeofSpeed) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TypeofSpeed) Descriptor() protoreflect.EnumDescriptor {
	return file_techpages_speedtechpage_proto_enumTypes[0].Descriptor()
}

func (TypeofSpeed) Type() protoreflect.EnumType {
	return &file_techpages_speedtechpage_proto_enumTypes[0]
}

func (x TypeofSpeed) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TypeofSpeed.Descriptor instead.
func (TypeofSpeed) EnumDescriptor() ([]byte, []int) {
	return file_techpages_speedtechpage_proto_rawDescGZIP(), []int{0}
}

// -SpeedTest-
type SpeedTestPageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpeedtestData []*TechSpeedTest       `protobuf:"bytes,1,rep,name=speedtest_data,json=speedtestData,proto3" json:"speedtest_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpeedTestPageResponse) Reset() {
	*x = SpeedTestPageResponse{}
	mi := &file_techpages_speedtechpage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeedTestPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeedTestPageResponse) ProtoMessage() {}

func (x *SpeedTestPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_techpages_speedtechpage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeedTestPageResponse.ProtoReflect.Descriptor instead.
func (*SpeedTestPageResponse) Descriptor() ([]byte, []int) {
	return file_techpages_speedtechpage_proto_rawDescGZIP(), []int{0}
}

func (x *SpeedTestPageResponse) GetSpeedtestData() []*TechSpeedTest {
	if x != nil {
		return x.SpeedtestData
	}
	return nil
}

type TechSpeedTest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TypeOfData    TypeofSpeed            `protobuf:"varint,1,opt,name=type_of_data,json=typeOfData,proto3,enum=selfcare.TypeofSpeed" json:"type_of_data,omitempty"`
	SpeedValues   int32                  `protobuf:"varint,2,opt,name=speed_values,json=speedValues,proto3" json:"speed_values,omitempty"` //Mbps
	SpeedDate     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=speed_date,json=speedDate,proto3" json:"speed_date,omitempty"`        // check if timestamp is needed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TechSpeedTest) Reset() {
	*x = TechSpeedTest{}
	mi := &file_techpages_speedtechpage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TechSpeedTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechSpeedTest) ProtoMessage() {}

func (x *TechSpeedTest) ProtoReflect() protoreflect.Message {
	mi := &file_techpages_speedtechpage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TechSpeedTest.ProtoReflect.Descriptor instead.
func (*TechSpeedTest) Descriptor() ([]byte, []int) {
	return file_techpages_speedtechpage_proto_rawDescGZIP(), []int{1}
}

func (x *TechSpeedTest) GetTypeOfData() TypeofSpeed {
	if x != nil {
		return x.TypeOfData
	}
	return TypeofSpeed_tcp
}

func (x *TechSpeedTest) GetSpeedValues() int32 {
	if x != nil {
		return x.SpeedValues
	}
	return 0
}

func (x *TechSpeedTest) GetSpeedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SpeedDate
	}
	return nil
}

type SpeedTestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*TechSpeedTest       `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpeedTestResponse) Reset() {
	*x = SpeedTestResponse{}
	mi := &file_techpages_speedtechpage_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeedTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeedTestResponse) ProtoMessage() {}

func (x *SpeedTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_techpages_speedtechpage_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeedTestResponse.ProtoReflect.Descriptor instead.
func (*SpeedTestResponse) Descriptor() ([]byte, []int) {
	return file_techpages_speedtechpage_proto_rawDescGZIP(), []int{2}
}

func (x *SpeedTestResponse) GetResults() []*TechSpeedTest {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_techpages_speedtechpage_proto protoreflect.FileDescriptor

const file_techpages_speedtechpage_proto_rawDesc = "" +
	"\n" +
	"\x1dtechpages/speedtechpage.proto\x12\bselfcare\x1a\x1fgoogle/protobuf/timestamp.proto\"W\n" +
	"\x15SpeedTestPageResponse\x12>\n" +
	"\x0espeedtest_data\x18\x01 \x03(\v2\x17.selfcare.TechSpeedTestR\rspeedtestData\"\xa6\x01\n" +
	"\rTechSpeedTest\x127\n" +
	"\ftype_of_data\x18\x01 \x01(\x0e2\x15.selfcare.TypeofSpeedR\n" +
	"typeOfData\x12!\n" +
	"\fspeed_values\x18\x02 \x01(\x05R\vspeedValues\x129\n" +
	"\n" +
	"speed_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tspeedDate\"F\n" +
	"\x11SpeedTestResponse\x121\n" +
	"\aresults\x18\x01 \x03(\v2\x17.selfcare.TechSpeedTestR\aresults*9\n" +
	"\vTypeofSpeed\x12\a\n" +
	"\x03tcp\x10\x00\x12\a\n" +
	"\x03udp\x10\x01\x12\f\n" +
	"\bdownload\x10\x02\x12\n" +
	"\n" +
	"\x06upload\x10\x03B\x13Z\x11pkg/gen/techpagesb\x06proto3"

var (
	file_techpages_speedtechpage_proto_rawDescOnce sync.Once
	file_techpages_speedtechpage_proto_rawDescData []byte
)

func file_techpages_speedtechpage_proto_rawDescGZIP() []byte {
	file_techpages_speedtechpage_proto_rawDescOnce.Do(func() {
		file_techpages_speedtechpage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_techpages_speedtechpage_proto_rawDesc), len(file_techpages_speedtechpage_proto_rawDesc)))
	})
	return file_techpages_speedtechpage_proto_rawDescData
}

var file_techpages_speedtechpage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_techpages_speedtechpage_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_techpages_speedtechpage_proto_goTypes = []any{
	(TypeofSpeed)(0),              // 0: selfcare.TypeofSpeed
	(*SpeedTestPageResponse)(nil), // 1: selfcare.SpeedTestPageResponse
	(*TechSpeedTest)(nil),         // 2: selfcare.TechSpeedTest
	(*SpeedTestResponse)(nil),     // 3: selfcare.SpeedTestResponse
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_techpages_speedtechpage_proto_depIdxs = []int32{
	2, // 0: selfcare.SpeedTestPageResponse.speedtest_data:type_name -> selfcare.TechSpeedTest
	0, // 1: selfcare.TechSpeedTest.type_of_data:type_name -> selfcare.TypeofSpeed
	4, // 2: selfcare.TechSpeedTest.speed_date:type_name -> google.protobuf.Timestamp
	2, // 3: selfcare.SpeedTestResponse.results:type_name -> selfcare.TechSpeedTest
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_techpages_speedtechpage_proto_init() }
func file_techpages_speedtechpage_proto_init() {
	if File_techpages_speedtechpage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_techpages_speedtechpage_proto_rawDesc), len(file_techpages_speedtechpage_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_techpages_speedtechpage_proto_goTypes,
		DependencyIndexes: file_techpages_speedtechpage_proto_depIdxs,
		EnumInfos:         file_techpages_speedtechpage_proto_enumTypes,
		MessageInfos:      file_techpages_speedtechpage_proto_msgTypes,
	}.Build()
	File_techpages_speedtechpage_proto = out.File
	file_techpages_speedtechpage_proto_goTypes = nil
	file_techpages_speedtechpage_proto_depIdxs = nil
}
