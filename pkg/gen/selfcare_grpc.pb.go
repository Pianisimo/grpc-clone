// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.32.0
// source: selfcare.proto

package gen

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	clientpages "grpc-clone/pkg/gen/clientpages"
	shared "github.com/Pianisimo/grpc-clone/pkg/gen/shared"
	techpages "github.com/Pianisimo/grpc-clone/pkg/gen/techpages"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	SelfCareService_GetHomepageData_FullMethodName        = "/selfcare.SelfCareService/GetHomepageData"
	SelfCareService_GetHomepageDynamic_FullMethodName     = "/selfcare.SelfCareService/GetHomepageDynamic"
	SelfCareService_GetTopologyData_FullMethodName        = "/selfcare.SelfCareService/GetTopologyData"
	SelfCareService_GetRouterDetail_FullMethodName        = "/selfcare.SelfCareService/GetRouterDetail"
	SelfCareService_GetDeviceDetail_FullMethodName        = "/selfcare.SelfCareService/GetDeviceDetail"
	SelfCareService_GetConnectedDevices_FullMethodName    = "/selfcare.SelfCareService/GetConnectedDevices"
	SelfCareService_GetWifiSettings_FullMethodName        = "/selfcare.SelfCareService/GetWifiSettings"
	SelfCareService_UpdateWifiSettings_FullMethodName     = "/selfcare.SelfCareService/UpdateWifiSettings"
	SelfCareService_GetDashboardPage_FullMethodName       = "/selfcare.SelfCareService/GetDashboardPage"
	SelfCareService_GetStatusHealthClient_FullMethodName  = "/selfcare.SelfCareService/GetStatusHealthClient"
	SelfCareService_SetFrequency_FullMethodName           = "/selfcare.SelfCareService/SetFrequency"
	SelfCareService_OptimizeClient_FullMethodName         = "/selfcare.SelfCareService/OptimizeClient"
	SelfCareService_GetInterference_FullMethodName        = "/selfcare.SelfCareService/GetInterference"
	SelfCareService_GetWifiGeneral_FullMethodName         = "/selfcare.SelfCareService/GetWifiGeneral"
	SelfCareService_GetGuestAccess_FullMethodName         = "/selfcare.SelfCareService/GetGuestAccess"
	SelfCareService_GetEnableGuest_FullMethodName         = "/selfcare.SelfCareService/GetEnableGuest"
	SelfCareService_GetUpdateGuest_FullMethodName         = "/selfcare.SelfCareService/GetUpdateGuest"
	SelfCareService_GetReboot_FullMethodName              = "/selfcare.SelfCareService/GetReboot"
	SelfCareService_GetUsagePage_FullMethodName           = "/selfcare.SelfCareService/GetUsagePage"
	SelfCareService_GetSpeedPage_FullMethodName           = "/selfcare.SelfCareService/GetSpeedPage"
	SelfCareService_GetSpeedTableHistory_FullMethodName   = "/selfcare.SelfCareService/GetSpeedTableHistory"
	SelfCareService_GetTrafficSignal_FullMethodName       = "/selfcare.SelfCareService/GetTrafficSignal"
	SelfCareService_GetTrafficTable_FullMethodName        = "/selfcare.SelfCareService/GetTrafficTable"
	SelfCareService_GetOverviewPage_FullMethodName        = "/selfcare.SelfCareService/GetOverviewPage"
	SelfCareService_GetSpeedTestPage_FullMethodName       = "/selfcare.SelfCareService/GetSpeedTestPage"
	SelfCareService_GetRunSpeedTest_FullMethodName        = "/selfcare.SelfCareService/GetRunSpeedTest"
	SelfCareService_GetInstallationDetails_FullMethodName = "/selfcare.SelfCareService/GetInstallationDetails"
	SelfCareService_GetStatusHealthTech_FullMethodName    = "/selfcare.SelfCareService/GetStatusHealthTech"
	SelfCareService_GetChannels_FullMethodName            = "/selfcare.SelfCareService/GetChannels"
	SelfCareService_OptimizeChannels_FullMethodName       = "/selfcare.SelfCareService/OptimizeChannels"
)

// SelfCareServiceClient is the client API for SelfCareService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// SERVICES
type SelfCareServiceClient interface {
	// Homepage
	GetHomepageData(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*HomepageDataResponse, error)
	GetHomepageDynamic(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*HomepageDynamicUpdateResponse, error)
	// Topology
	GetTopologyData(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*TopologyDataResponse, error)
	// Router & Device
	GetRouterDetail(ctx context.Context, in *shared.RouterStatic, opts ...grpc.CallOption) (*RouterDetailResponse, error)
	GetDeviceDetail(ctx context.Context, in *shared.DeviceStatic, opts ...grpc.CallOption) (*DeviceDetailResponse, error)
	// Connected Devices
	GetConnectedDevices(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*ConnectedDevicesResponse, error)
	// Wifi Settings
	GetWifiSettings(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.WifiSettingsResponse, error)
	UpdateWifiSettings(ctx context.Context, in *clientpages.UpdateWifiSettingsRequest, opts ...grpc.CallOption) (*clientpages.UpdateWifiSettingsResponse, error)
	// Dashboard
	GetDashboardPage(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.DashboardPageResponse, error)
	// Wifi Status
	GetStatusHealthClient(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.StatusHealthClientResponse, error)
	SetFrequency(ctx context.Context, in *clientpages.SetFrequencyRequest, opts ...grpc.CallOption) (*clientpages.SetFrequencyResponse, error)
	OptimizeClient(ctx context.Context, in *clientpages.OptimizeClientRequest, opts ...grpc.CallOption) (*clientpages.OptimizeClientResponse, error)
	GetInterference(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*InterferenceResponse, error)
	// Wifi Tools
	GetWifiGeneral(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.WifiGeneralResponse, error)
	// /
	GetGuestAccess(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.GuestAccessResponse, error)
	GetEnableGuest(ctx context.Context, in *clientpages.EnableGuestRequest, opts ...grpc.CallOption) (*clientpages.UpdateGuestResponse, error)
	GetUpdateGuest(ctx context.Context, in *clientpages.UpdateGuestRequest, opts ...grpc.CallOption) (*clientpages.UpdateGuestResponse, error)
	// /
	GetReboot(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.RebootResponse, error)
	// Usage
	GetUsagePage(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.UsagePageResponse, error)
	// Speed
	GetSpeedPage(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.SpeedPageResponse, error)
	GetSpeedTableHistory(ctx context.Context, in *clientpages.SpeedTableHistoryRequest, opts ...grpc.CallOption) (*clientpages.SpeedTableHistoryResponse, error)
	// Traffic
	GetTrafficSignal(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.TrafficSignalResponse, error)
	GetTrafficTable(ctx context.Context, in *clientpages.TrafficTableRequest, opts ...grpc.CallOption) (*clientpages.TrafficTableResponse, error)
	// TECH APP PAGES
	// Overview TechPage
	GetOverviewPage(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*techpages.OverviewPageResponse, error)
	// Speed Test TechPage
	GetSpeedTestPage(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*techpages.SpeedTestPageResponse, error)
	GetRunSpeedTest(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*techpages.SpeedTestResponse, error)
	// Installation
	GetInstallationDetails(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*techpages.InstallationDetailsResponse, error)
	// Status Techapp
	GetStatusHealthTech(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*techpages.StatusHealthTechResponse, error)
	GetChannels(ctx context.Context, in *techpages.ChannelsRequest, opts ...grpc.CallOption) (*techpages.ChannelsResponse, error)
	OptimizeChannels(ctx context.Context, in *techpages.OptimizeChannelRequest, opts ...grpc.CallOption) (*techpages.OptimizeChannelResponse, error)
}

type selfCareServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSelfCareServiceClient(cc grpc.ClientConnInterface) SelfCareServiceClient {
	return &selfCareServiceClient{cc}
}

func (c *selfCareServiceClient) GetHomepageData(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*HomepageDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(HomepageDataResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetHomepageData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetHomepageDynamic(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*HomepageDynamicUpdateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(HomepageDynamicUpdateResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetHomepageDynamic_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetTopologyData(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*TopologyDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(TopologyDataResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetTopologyData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetRouterDetail(ctx context.Context, in *shared.RouterStatic, opts ...grpc.CallOption) (*RouterDetailResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RouterDetailResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetRouterDetail_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetDeviceDetail(ctx context.Context, in *shared.DeviceStatic, opts ...grpc.CallOption) (*DeviceDetailResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeviceDetailResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetDeviceDetail_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetConnectedDevices(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*ConnectedDevicesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ConnectedDevicesResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetConnectedDevices_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetWifiSettings(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.WifiSettingsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.WifiSettingsResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetWifiSettings_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) UpdateWifiSettings(ctx context.Context, in *clientpages.UpdateWifiSettingsRequest, opts ...grpc.CallOption) (*clientpages.UpdateWifiSettingsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.UpdateWifiSettingsResponse)
	err := c.cc.Invoke(ctx, SelfCareService_UpdateWifiSettings_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetDashboardPage(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.DashboardPageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.DashboardPageResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetDashboardPage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetStatusHealthClient(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.StatusHealthClientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.StatusHealthClientResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetStatusHealthClient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) SetFrequency(ctx context.Context, in *clientpages.SetFrequencyRequest, opts ...grpc.CallOption) (*clientpages.SetFrequencyResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.SetFrequencyResponse)
	err := c.cc.Invoke(ctx, SelfCareService_SetFrequency_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) OptimizeClient(ctx context.Context, in *clientpages.OptimizeClientRequest, opts ...grpc.CallOption) (*clientpages.OptimizeClientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.OptimizeClientResponse)
	err := c.cc.Invoke(ctx, SelfCareService_OptimizeClient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetInterference(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*InterferenceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InterferenceResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetInterference_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetWifiGeneral(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.WifiGeneralResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.WifiGeneralResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetWifiGeneral_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetGuestAccess(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.GuestAccessResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.GuestAccessResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetGuestAccess_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetEnableGuest(ctx context.Context, in *clientpages.EnableGuestRequest, opts ...grpc.CallOption) (*clientpages.UpdateGuestResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.UpdateGuestResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetEnableGuest_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetUpdateGuest(ctx context.Context, in *clientpages.UpdateGuestRequest, opts ...grpc.CallOption) (*clientpages.UpdateGuestResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.UpdateGuestResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetUpdateGuest_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetReboot(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.RebootResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.RebootResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetReboot_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetUsagePage(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.UsagePageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.UsagePageResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetUsagePage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetSpeedPage(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.SpeedPageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.SpeedPageResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetSpeedPage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetSpeedTableHistory(ctx context.Context, in *clientpages.SpeedTableHistoryRequest, opts ...grpc.CallOption) (*clientpages.SpeedTableHistoryResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.SpeedTableHistoryResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetSpeedTableHistory_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetTrafficSignal(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*clientpages.TrafficSignalResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.TrafficSignalResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetTrafficSignal_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetTrafficTable(ctx context.Context, in *clientpages.TrafficTableRequest, opts ...grpc.CallOption) (*clientpages.TrafficTableResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(clientpages.TrafficTableResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetTrafficTable_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetOverviewPage(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*techpages.OverviewPageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(techpages.OverviewPageResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetOverviewPage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetSpeedTestPage(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*techpages.SpeedTestPageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(techpages.SpeedTestPageResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetSpeedTestPage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetRunSpeedTest(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*techpages.SpeedTestResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(techpages.SpeedTestResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetRunSpeedTest_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetInstallationDetails(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*techpages.InstallationDetailsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(techpages.InstallationDetailsResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetInstallationDetails_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetStatusHealthTech(ctx context.Context, in *shared.EmptyRequest, opts ...grpc.CallOption) (*techpages.StatusHealthTechResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(techpages.StatusHealthTechResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetStatusHealthTech_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) GetChannels(ctx context.Context, in *techpages.ChannelsRequest, opts ...grpc.CallOption) (*techpages.ChannelsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(techpages.ChannelsResponse)
	err := c.cc.Invoke(ctx, SelfCareService_GetChannels_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfCareServiceClient) OptimizeChannels(ctx context.Context, in *techpages.OptimizeChannelRequest, opts ...grpc.CallOption) (*techpages.OptimizeChannelResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(techpages.OptimizeChannelResponse)
	err := c.cc.Invoke(ctx, SelfCareService_OptimizeChannels_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SelfCareServiceServer is the server API for SelfCareService service.
// All implementations must embed UnimplementedSelfCareServiceServer
// for forward compatibility.
//
// SERVICES
type SelfCareServiceServer interface {
	// Homepage
	GetHomepageData(context.Context, *shared.EmptyRequest) (*HomepageDataResponse, error)
	GetHomepageDynamic(context.Context, *shared.EmptyRequest) (*HomepageDynamicUpdateResponse, error)
	// Topology
	GetTopologyData(context.Context, *shared.EmptyRequest) (*TopologyDataResponse, error)
	// Router & Device
	GetRouterDetail(context.Context, *shared.RouterStatic) (*RouterDetailResponse, error)
	GetDeviceDetail(context.Context, *shared.DeviceStatic) (*DeviceDetailResponse, error)
	// Connected Devices
	GetConnectedDevices(context.Context, *shared.EmptyRequest) (*ConnectedDevicesResponse, error)
	// Wifi Settings
	GetWifiSettings(context.Context, *shared.EmptyRequest) (*clientpages.WifiSettingsResponse, error)
	UpdateWifiSettings(context.Context, *clientpages.UpdateWifiSettingsRequest) (*clientpages.UpdateWifiSettingsResponse, error)
	// Dashboard
	GetDashboardPage(context.Context, *shared.EmptyRequest) (*clientpages.DashboardPageResponse, error)
	// Wifi Status
	GetStatusHealthClient(context.Context, *shared.EmptyRequest) (*clientpages.StatusHealthClientResponse, error)
	SetFrequency(context.Context, *clientpages.SetFrequencyRequest) (*clientpages.SetFrequencyResponse, error)
	OptimizeClient(context.Context, *clientpages.OptimizeClientRequest) (*clientpages.OptimizeClientResponse, error)
	GetInterference(context.Context, *shared.EmptyRequest) (*InterferenceResponse, error)
	// Wifi Tools
	GetWifiGeneral(context.Context, *shared.EmptyRequest) (*clientpages.WifiGeneralResponse, error)
	// /
	GetGuestAccess(context.Context, *shared.EmptyRequest) (*clientpages.GuestAccessResponse, error)
	GetEnableGuest(context.Context, *clientpages.EnableGuestRequest) (*clientpages.UpdateGuestResponse, error)
	GetUpdateGuest(context.Context, *clientpages.UpdateGuestRequest) (*clientpages.UpdateGuestResponse, error)
	// /
	GetReboot(context.Context, *shared.EmptyRequest) (*clientpages.RebootResponse, error)
	// Usage
	GetUsagePage(context.Context, *shared.EmptyRequest) (*clientpages.UsagePageResponse, error)
	// Speed
	GetSpeedPage(context.Context, *shared.EmptyRequest) (*clientpages.SpeedPageResponse, error)
	GetSpeedTableHistory(context.Context, *clientpages.SpeedTableHistoryRequest) (*clientpages.SpeedTableHistoryResponse, error)
	// Traffic
	GetTrafficSignal(context.Context, *shared.EmptyRequest) (*clientpages.TrafficSignalResponse, error)
	GetTrafficTable(context.Context, *clientpages.TrafficTableRequest) (*clientpages.TrafficTableResponse, error)
	// TECH APP PAGES
	// Overview TechPage
	GetOverviewPage(context.Context, *shared.EmptyRequest) (*techpages.OverviewPageResponse, error)
	// Speed Test TechPage
	GetSpeedTestPage(context.Context, *shared.EmptyRequest) (*techpages.SpeedTestPageResponse, error)
	GetRunSpeedTest(context.Context, *shared.EmptyRequest) (*techpages.SpeedTestResponse, error)
	// Installation
	GetInstallationDetails(context.Context, *shared.EmptyRequest) (*techpages.InstallationDetailsResponse, error)
	// Status Techapp
	GetStatusHealthTech(context.Context, *shared.EmptyRequest) (*techpages.StatusHealthTechResponse, error)
	GetChannels(context.Context, *techpages.ChannelsRequest) (*techpages.ChannelsResponse, error)
	OptimizeChannels(context.Context, *techpages.OptimizeChannelRequest) (*techpages.OptimizeChannelResponse, error)
	mustEmbedUnimplementedSelfCareServiceServer()
}

// UnimplementedSelfCareServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSelfCareServiceServer struct{}

func (UnimplementedSelfCareServiceServer) GetHomepageData(context.Context, *shared.EmptyRequest) (*HomepageDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHomepageData not implemented")
}
func (UnimplementedSelfCareServiceServer) GetHomepageDynamic(context.Context, *shared.EmptyRequest) (*HomepageDynamicUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHomepageDynamic not implemented")
}
func (UnimplementedSelfCareServiceServer) GetTopologyData(context.Context, *shared.EmptyRequest) (*TopologyDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopologyData not implemented")
}
func (UnimplementedSelfCareServiceServer) GetRouterDetail(context.Context, *shared.RouterStatic) (*RouterDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRouterDetail not implemented")
}
func (UnimplementedSelfCareServiceServer) GetDeviceDetail(context.Context, *shared.DeviceStatic) (*DeviceDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceDetail not implemented")
}
func (UnimplementedSelfCareServiceServer) GetConnectedDevices(context.Context, *shared.EmptyRequest) (*ConnectedDevicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConnectedDevices not implemented")
}
func (UnimplementedSelfCareServiceServer) GetWifiSettings(context.Context, *shared.EmptyRequest) (*clientpages.WifiSettingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWifiSettings not implemented")
}
func (UnimplementedSelfCareServiceServer) UpdateWifiSettings(context.Context, *clientpages.UpdateWifiSettingsRequest) (*clientpages.UpdateWifiSettingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWifiSettings not implemented")
}
func (UnimplementedSelfCareServiceServer) GetDashboardPage(context.Context, *shared.EmptyRequest) (*clientpages.DashboardPageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDashboardPage not implemented")
}
func (UnimplementedSelfCareServiceServer) GetStatusHealthClient(context.Context, *shared.EmptyRequest) (*clientpages.StatusHealthClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatusHealthClient not implemented")
}
func (UnimplementedSelfCareServiceServer) SetFrequency(context.Context, *clientpages.SetFrequencyRequest) (*clientpages.SetFrequencyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetFrequency not implemented")
}
func (UnimplementedSelfCareServiceServer) OptimizeClient(context.Context, *clientpages.OptimizeClientRequest) (*clientpages.OptimizeClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OptimizeClient not implemented")
}
func (UnimplementedSelfCareServiceServer) GetInterference(context.Context, *shared.EmptyRequest) (*InterferenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInterference not implemented")
}
func (UnimplementedSelfCareServiceServer) GetWifiGeneral(context.Context, *shared.EmptyRequest) (*clientpages.WifiGeneralResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWifiGeneral not implemented")
}
func (UnimplementedSelfCareServiceServer) GetGuestAccess(context.Context, *shared.EmptyRequest) (*clientpages.GuestAccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGuestAccess not implemented")
}
func (UnimplementedSelfCareServiceServer) GetEnableGuest(context.Context, *clientpages.EnableGuestRequest) (*clientpages.UpdateGuestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEnableGuest not implemented")
}
func (UnimplementedSelfCareServiceServer) GetUpdateGuest(context.Context, *clientpages.UpdateGuestRequest) (*clientpages.UpdateGuestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUpdateGuest not implemented")
}
func (UnimplementedSelfCareServiceServer) GetReboot(context.Context, *shared.EmptyRequest) (*clientpages.RebootResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReboot not implemented")
}
func (UnimplementedSelfCareServiceServer) GetUsagePage(context.Context, *shared.EmptyRequest) (*clientpages.UsagePageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsagePage not implemented")
}
func (UnimplementedSelfCareServiceServer) GetSpeedPage(context.Context, *shared.EmptyRequest) (*clientpages.SpeedPageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpeedPage not implemented")
}
func (UnimplementedSelfCareServiceServer) GetSpeedTableHistory(context.Context, *clientpages.SpeedTableHistoryRequest) (*clientpages.SpeedTableHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpeedTableHistory not implemented")
}
func (UnimplementedSelfCareServiceServer) GetTrafficSignal(context.Context, *shared.EmptyRequest) (*clientpages.TrafficSignalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTrafficSignal not implemented")
}
func (UnimplementedSelfCareServiceServer) GetTrafficTable(context.Context, *clientpages.TrafficTableRequest) (*clientpages.TrafficTableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTrafficTable not implemented")
}
func (UnimplementedSelfCareServiceServer) GetOverviewPage(context.Context, *shared.EmptyRequest) (*techpages.OverviewPageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOverviewPage not implemented")
}
func (UnimplementedSelfCareServiceServer) GetSpeedTestPage(context.Context, *shared.EmptyRequest) (*techpages.SpeedTestPageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpeedTestPage not implemented")
}
func (UnimplementedSelfCareServiceServer) GetRunSpeedTest(context.Context, *shared.EmptyRequest) (*techpages.SpeedTestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRunSpeedTest not implemented")
}
func (UnimplementedSelfCareServiceServer) GetInstallationDetails(context.Context, *shared.EmptyRequest) (*techpages.InstallationDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInstallationDetails not implemented")
}
func (UnimplementedSelfCareServiceServer) GetStatusHealthTech(context.Context, *shared.EmptyRequest) (*techpages.StatusHealthTechResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatusHealthTech not implemented")
}
func (UnimplementedSelfCareServiceServer) GetChannels(context.Context, *techpages.ChannelsRequest) (*techpages.ChannelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannels not implemented")
}
func (UnimplementedSelfCareServiceServer) OptimizeChannels(context.Context, *techpages.OptimizeChannelRequest) (*techpages.OptimizeChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OptimizeChannels not implemented")
}
func (UnimplementedSelfCareServiceServer) mustEmbedUnimplementedSelfCareServiceServer() {}
func (UnimplementedSelfCareServiceServer) testEmbeddedByValue()                         {}

// UnsafeSelfCareServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SelfCareServiceServer will
// result in compilation errors.
type UnsafeSelfCareServiceServer interface {
	mustEmbedUnimplementedSelfCareServiceServer()
}

func RegisterSelfCareServiceServer(s grpc.ServiceRegistrar, srv SelfCareServiceServer) {
	// If the following call pancis, it indicates UnimplementedSelfCareServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&SelfCareService_ServiceDesc, srv)
}

func _SelfCareService_GetHomepageData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetHomepageData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetHomepageData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetHomepageData(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetHomepageDynamic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetHomepageDynamic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetHomepageDynamic_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetHomepageDynamic(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetTopologyData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetTopologyData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetTopologyData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetTopologyData(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetRouterDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.RouterStatic)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetRouterDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetRouterDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetRouterDetail(ctx, req.(*shared.RouterStatic))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetDeviceDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.DeviceStatic)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetDeviceDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetDeviceDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetDeviceDetail(ctx, req.(*shared.DeviceStatic))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetConnectedDevices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetConnectedDevices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetConnectedDevices_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetConnectedDevices(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetWifiSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetWifiSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetWifiSettings_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetWifiSettings(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_UpdateWifiSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(clientpages.UpdateWifiSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).UpdateWifiSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_UpdateWifiSettings_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).UpdateWifiSettings(ctx, req.(*clientpages.UpdateWifiSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetDashboardPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetDashboardPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetDashboardPage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetDashboardPage(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetStatusHealthClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetStatusHealthClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetStatusHealthClient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetStatusHealthClient(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_SetFrequency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(clientpages.SetFrequencyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).SetFrequency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_SetFrequency_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).SetFrequency(ctx, req.(*clientpages.SetFrequencyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_OptimizeClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(clientpages.OptimizeClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).OptimizeClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_OptimizeClient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).OptimizeClient(ctx, req.(*clientpages.OptimizeClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetInterference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetInterference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetInterference_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetInterference(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetWifiGeneral_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetWifiGeneral(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetWifiGeneral_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetWifiGeneral(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetGuestAccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetGuestAccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetGuestAccess_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetGuestAccess(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetEnableGuest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(clientpages.EnableGuestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetEnableGuest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetEnableGuest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetEnableGuest(ctx, req.(*clientpages.EnableGuestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetUpdateGuest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(clientpages.UpdateGuestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetUpdateGuest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetUpdateGuest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetUpdateGuest(ctx, req.(*clientpages.UpdateGuestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetReboot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetReboot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetReboot_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetReboot(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetUsagePage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetUsagePage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetUsagePage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetUsagePage(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetSpeedPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetSpeedPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetSpeedPage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetSpeedPage(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetSpeedTableHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(clientpages.SpeedTableHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetSpeedTableHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetSpeedTableHistory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetSpeedTableHistory(ctx, req.(*clientpages.SpeedTableHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetTrafficSignal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetTrafficSignal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetTrafficSignal_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetTrafficSignal(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetTrafficTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(clientpages.TrafficTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetTrafficTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetTrafficTable_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetTrafficTable(ctx, req.(*clientpages.TrafficTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetOverviewPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetOverviewPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetOverviewPage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetOverviewPage(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetSpeedTestPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetSpeedTestPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetSpeedTestPage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetSpeedTestPage(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetRunSpeedTest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetRunSpeedTest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetRunSpeedTest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetRunSpeedTest(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetInstallationDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetInstallationDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetInstallationDetails_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetInstallationDetails(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetStatusHealthTech_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetStatusHealthTech(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetStatusHealthTech_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetStatusHealthTech(ctx, req.(*shared.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_GetChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(techpages.ChannelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).GetChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_GetChannels_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).GetChannels(ctx, req.(*techpages.ChannelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfCareService_OptimizeChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(techpages.OptimizeChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfCareServiceServer).OptimizeChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfCareService_OptimizeChannels_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfCareServiceServer).OptimizeChannels(ctx, req.(*techpages.OptimizeChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SelfCareService_ServiceDesc is the grpc.ServiceDesc for SelfCareService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SelfCareService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "selfcare.SelfCareService",
	HandlerType: (*SelfCareServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHomepageData",
			Handler:    _SelfCareService_GetHomepageData_Handler,
		},
		{
			MethodName: "GetHomepageDynamic",
			Handler:    _SelfCareService_GetHomepageDynamic_Handler,
		},
		{
			MethodName: "GetTopologyData",
			Handler:    _SelfCareService_GetTopologyData_Handler,
		},
		{
			MethodName: "GetRouterDetail",
			Handler:    _SelfCareService_GetRouterDetail_Handler,
		},
		{
			MethodName: "GetDeviceDetail",
			Handler:    _SelfCareService_GetDeviceDetail_Handler,
		},
		{
			MethodName: "GetConnectedDevices",
			Handler:    _SelfCareService_GetConnectedDevices_Handler,
		},
		{
			MethodName: "GetWifiSettings",
			Handler:    _SelfCareService_GetWifiSettings_Handler,
		},
		{
			MethodName: "UpdateWifiSettings",
			Handler:    _SelfCareService_UpdateWifiSettings_Handler,
		},
		{
			MethodName: "GetDashboardPage",
			Handler:    _SelfCareService_GetDashboardPage_Handler,
		},
		{
			MethodName: "GetStatusHealthClient",
			Handler:    _SelfCareService_GetStatusHealthClient_Handler,
		},
		{
			MethodName: "SetFrequency",
			Handler:    _SelfCareService_SetFrequency_Handler,
		},
		{
			MethodName: "OptimizeClient",
			Handler:    _SelfCareService_OptimizeClient_Handler,
		},
		{
			MethodName: "GetInterference",
			Handler:    _SelfCareService_GetInterference_Handler,
		},
		{
			MethodName: "GetWifiGeneral",
			Handler:    _SelfCareService_GetWifiGeneral_Handler,
		},
		{
			MethodName: "GetGuestAccess",
			Handler:    _SelfCareService_GetGuestAccess_Handler,
		},
		{
			MethodName: "GetEnableGuest",
			Handler:    _SelfCareService_GetEnableGuest_Handler,
		},
		{
			MethodName: "GetUpdateGuest",
			Handler:    _SelfCareService_GetUpdateGuest_Handler,
		},
		{
			MethodName: "GetReboot",
			Handler:    _SelfCareService_GetReboot_Handler,
		},
		{
			MethodName: "GetUsagePage",
			Handler:    _SelfCareService_GetUsagePage_Handler,
		},
		{
			MethodName: "GetSpeedPage",
			Handler:    _SelfCareService_GetSpeedPage_Handler,
		},
		{
			MethodName: "GetSpeedTableHistory",
			Handler:    _SelfCareService_GetSpeedTableHistory_Handler,
		},
		{
			MethodName: "GetTrafficSignal",
			Handler:    _SelfCareService_GetTrafficSignal_Handler,
		},
		{
			MethodName: "GetTrafficTable",
			Handler:    _SelfCareService_GetTrafficTable_Handler,
		},
		{
			MethodName: "GetOverviewPage",
			Handler:    _SelfCareService_GetOverviewPage_Handler,
		},
		{
			MethodName: "GetSpeedTestPage",
			Handler:    _SelfCareService_GetSpeedTestPage_Handler,
		},
		{
			MethodName: "GetRunSpeedTest",
			Handler:    _SelfCareService_GetRunSpeedTest_Handler,
		},
		{
			MethodName: "GetInstallationDetails",
			Handler:    _SelfCareService_GetInstallationDetails_Handler,
		},
		{
			MethodName: "GetStatusHealthTech",
			Handler:    _SelfCareService_GetStatusHealthTech_Handler,
		},
		{
			MethodName: "GetChannels",
			Handler:    _SelfCareService_GetChannels_Handler,
		},
		{
			MethodName: "OptimizeChannels",
			Handler:    _SelfCareService_OptimizeChannels_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "selfcare.proto",
}
