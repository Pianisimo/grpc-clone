// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: shared/shared.proto

package shared

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TypeDevice int32

const (
	TypeDevice_phone    TypeDevice = 0
	TypeDevice_tablet   TypeDevice = 1
	TypeDevice_smart_tv TypeDevice = 2
	TypeDevice_laptop   TypeDevice = 3
)

// Enum value maps for TypeDevice.
var (
	TypeDevice_name = map[int32]string{
		0: "phone",
		1: "tablet",
		2: "smart_tv",
		3: "laptop",
	}
	TypeDevice_value = map[string]int32{
		"phone":    0,
		"tablet":   1,
		"smart_tv": 2,
		"laptop":   3,
	}
)

func (x TypeDevice) Enum() *TypeDevice {
	p := new(TypeDevice)
	*p = x
	return p
}

func (x TypeDevice) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TypeDevice) Descriptor() protoreflect.EnumDescriptor {
	return file_shared_shared_proto_enumTypes[0].Descriptor()
}

func (TypeDevice) Type() protoreflect.EnumType {
	return &file_shared_shared_proto_enumTypes[0]
}

func (x TypeDevice) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TypeDevice.Descriptor instead.
func (TypeDevice) EnumDescriptor() ([]byte, []int) {
	return file_shared_shared_proto_rawDescGZIP(), []int{0}
}

// -General Data-
type RouterStatic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //to identify router
	Ssid          string                 `protobuf:"bytes,2,opt,name=ssid,proto3" json:"ssid,omitempty"`
	MacAddress    string                 `protobuf:"bytes,3,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	IpAddress     string                 `protobuf:"bytes,4,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Manufacturer  string                 `protobuf:"bytes,5,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	SecurityType  string                 `protobuf:"bytes,6,opt,name=security_type,json=securityType,proto3" json:"security_type,omitempty"`
	SerialNumber  string                 `protobuf:"bytes,7,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Model         string                 `protobuf:"bytes,8,opt,name=model,proto3" json:"model,omitempty"`
	IsMain        bool                   `protobuf:"varint,9,opt,name=is_main,json=isMain,proto3" json:"is_main,omitempty"` //true if Main router - false if extender
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouterStatic) Reset() {
	*x = RouterStatic{}
	mi := &file_shared_shared_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouterStatic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouterStatic) ProtoMessage() {}

func (x *RouterStatic) ProtoReflect() protoreflect.Message {
	mi := &file_shared_shared_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouterStatic.ProtoReflect.Descriptor instead.
func (*RouterStatic) Descriptor() ([]byte, []int) {
	return file_shared_shared_proto_rawDescGZIP(), []int{0}
}

func (x *RouterStatic) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RouterStatic) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *RouterStatic) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *RouterStatic) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *RouterStatic) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *RouterStatic) GetSecurityType() string {
	if x != nil {
		return x.SecurityType
	}
	return ""
}

func (x *RouterStatic) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *RouterStatic) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *RouterStatic) GetIsMain() bool {
	if x != nil {
		return x.IsMain
	}
	return false
}

type RouterDynamic struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	ConnectedDevices          int32                  `protobuf:"varint,1,opt,name=connected_devices,json=connectedDevices,proto3" json:"connected_devices,omitempty"` //see if possible(extender or router)
	Rssi                      int32                  `protobuf:"varint,2,opt,name=rssi,proto3" json:"rssi,omitempty"`
	RouterChannel             []int32                `protobuf:"varint,3,rep,packed,name=router_channel,json=routerChannel,proto3" json:"router_channel,omitempty"`                                //TechAppData (2.4/5GHz)
	SupportedConnectedDevices bool                   `protobuf:"varint,4,opt,name=supported_connected_devices,json=supportedConnectedDevices,proto3" json:"supported_connected_devices,omitempty"` //true if has extender with different ip
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *RouterDynamic) Reset() {
	*x = RouterDynamic{}
	mi := &file_shared_shared_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouterDynamic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouterDynamic) ProtoMessage() {}

func (x *RouterDynamic) ProtoReflect() protoreflect.Message {
	mi := &file_shared_shared_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouterDynamic.ProtoReflect.Descriptor instead.
func (*RouterDynamic) Descriptor() ([]byte, []int) {
	return file_shared_shared_proto_rawDescGZIP(), []int{1}
}

func (x *RouterDynamic) GetConnectedDevices() int32 {
	if x != nil {
		return x.ConnectedDevices
	}
	return 0
}

func (x *RouterDynamic) GetRssi() int32 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *RouterDynamic) GetRouterChannel() []int32 {
	if x != nil {
		return x.RouterChannel
	}
	return nil
}

func (x *RouterDynamic) GetSupportedConnectedDevices() bool {
	if x != nil {
		return x.SupportedConnectedDevices
	}
	return false
}

type Router struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StaticInfo    *RouterStatic          `protobuf:"bytes,1,opt,name=static_info,json=staticInfo,proto3" json:"static_info,omitempty"` //to show both information
	DynamicInfo   *RouterDynamic         `protobuf:"bytes,2,opt,name=dynamic_info,json=dynamicInfo,proto3" json:"dynamic_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Router) Reset() {
	*x = Router{}
	mi := &file_shared_shared_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Router) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Router) ProtoMessage() {}

func (x *Router) ProtoReflect() protoreflect.Message {
	mi := &file_shared_shared_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Router.ProtoReflect.Descriptor instead.
func (*Router) Descriptor() ([]byte, []int) {
	return file_shared_shared_proto_rawDescGZIP(), []int{2}
}

func (x *Router) GetStaticInfo() *RouterStatic {
	if x != nil {
		return x.StaticInfo
	}
	return nil
}

func (x *Router) GetDynamicInfo() *RouterDynamic {
	if x != nil {
		return x.DynamicInfo
	}
	return nil
}

type DeviceStatic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // to identify device
	Ssid          string                 `protobuf:"bytes,2,opt,name=ssid,proto3" json:"ssid,omitempty"`
	IpAddress     string                 `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	MacAddress    string                 `protobuf:"bytes,4,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	AddressSource string                 `protobuf:"bytes,5,opt,name=address_source,json=addressSource,proto3" json:"address_source,omitempty"`
	Interface     string                 `protobuf:"bytes,6,opt,name=interface,proto3" json:"interface,omitempty"`
	TypeDevice    TypeDevice             `protobuf:"varint,7,opt,name=type_device,json=typeDevice,proto3,enum=selfcare.TypeDevice" json:"type_device,omitempty"` //TechAppData (Phone, laptop, TV)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceStatic) Reset() {
	*x = DeviceStatic{}
	mi := &file_shared_shared_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceStatic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceStatic) ProtoMessage() {}

func (x *DeviceStatic) ProtoReflect() protoreflect.Message {
	mi := &file_shared_shared_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceStatic.ProtoReflect.Descriptor instead.
func (*DeviceStatic) Descriptor() ([]byte, []int) {
	return file_shared_shared_proto_rawDescGZIP(), []int{3}
}

func (x *DeviceStatic) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeviceStatic) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *DeviceStatic) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *DeviceStatic) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *DeviceStatic) GetAddressSource() string {
	if x != nil {
		return x.AddressSource
	}
	return ""
}

func (x *DeviceStatic) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *DeviceStatic) GetTypeDevice() TypeDevice {
	if x != nil {
		return x.TypeDevice
	}
	return TypeDevice_phone
}

type DeviceDynamic struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RouterId       string                 `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"` //ID of the router that the device is connected to
	Rssi           int32                  `protobuf:"varint,2,opt,name=rssi,proto3" json:"rssi,omitempty"`
	UploadSpeed    string                 `protobuf:"bytes,3,opt,name=upload_speed,json=uploadSpeed,proto3" json:"upload_speed,omitempty"`
	DownloadSpeed  string                 `protobuf:"bytes,4,opt,name=download_speed,json=downloadSpeed,proto3" json:"download_speed,omitempty"`
	ConnectionType string                 `protobuf:"bytes,5,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"` //(LAN or WLAN)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeviceDynamic) Reset() {
	*x = DeviceDynamic{}
	mi := &file_shared_shared_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceDynamic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceDynamic) ProtoMessage() {}

func (x *DeviceDynamic) ProtoReflect() protoreflect.Message {
	mi := &file_shared_shared_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceDynamic.ProtoReflect.Descriptor instead.
func (*DeviceDynamic) Descriptor() ([]byte, []int) {
	return file_shared_shared_proto_rawDescGZIP(), []int{4}
}

func (x *DeviceDynamic) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *DeviceDynamic) GetRssi() int32 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *DeviceDynamic) GetUploadSpeed() string {
	if x != nil {
		return x.UploadSpeed
	}
	return ""
}

func (x *DeviceDynamic) GetDownloadSpeed() string {
	if x != nil {
		return x.DownloadSpeed
	}
	return ""
}

func (x *DeviceDynamic) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

type Device struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StaticInfo    *DeviceStatic          `protobuf:"bytes,1,opt,name=static_info,json=staticInfo,proto3" json:"static_info,omitempty"`
	DynamicInfo   *DeviceDynamic         `protobuf:"bytes,2,opt,name=dynamic_info,json=dynamicInfo,proto3" json:"dynamic_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Device) Reset() {
	*x = Device{}
	mi := &file_shared_shared_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_shared_shared_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_shared_shared_proto_rawDescGZIP(), []int{5}
}

func (x *Device) GetStaticInfo() *DeviceStatic {
	if x != nil {
		return x.StaticInfo
	}
	return nil
}

func (x *Device) GetDynamicInfo() *DeviceDynamic {
	if x != nil {
		return x.DynamicInfo
	}
	return nil
}

type DeviceHome struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouterId      string                 `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"` //only to show this specific information of device
	Rssi          int32                  `protobuf:"varint,2,opt,name=rssi,proto3" json:"rssi,omitempty"`
	Ssid          string                 `protobuf:"bytes,3,opt,name=ssid,proto3" json:"ssid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceHome) Reset() {
	*x = DeviceHome{}
	mi := &file_shared_shared_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceHome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceHome) ProtoMessage() {}

func (x *DeviceHome) ProtoReflect() protoreflect.Message {
	mi := &file_shared_shared_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceHome.ProtoReflect.Descriptor instead.
func (*DeviceHome) Descriptor() ([]byte, []int) {
	return file_shared_shared_proto_rawDescGZIP(), []int{6}
}

func (x *DeviceHome) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *DeviceHome) GetRssi() int32 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *DeviceHome) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

type Speed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Download      string                 `protobuf:"bytes,1,opt,name=download,proto3" json:"download,omitempty"` //From router
	Upload        string                 `protobuf:"bytes,2,opt,name=upload,proto3" json:"upload,omitempty"`     //From router
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Speed) Reset() {
	*x = Speed{}
	mi := &file_shared_shared_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Speed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Speed) ProtoMessage() {}

func (x *Speed) ProtoReflect() protoreflect.Message {
	mi := &file_shared_shared_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Speed.ProtoReflect.Descriptor instead.
func (*Speed) Descriptor() ([]byte, []int) {
	return file_shared_shared_proto_rawDescGZIP(), []int{7}
}

func (x *Speed) GetDownload() string {
	if x != nil {
		return x.Download
	}
	return ""
}

func (x *Speed) GetUpload() string {
	if x != nil {
		return x.Upload
	}
	return ""
}

type Usage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuHealth     int32                  `protobuf:"varint,1,opt,name=cpu_health,json=cpuHealth,proto3" json:"cpu_health,omitempty"`
	MemoryHealth  int32                  `protobuf:"varint,2,opt,name=memory_health,json=memoryHealth,proto3" json:"memory_health,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Usage) Reset() {
	*x = Usage{}
	mi := &file_shared_shared_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Usage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Usage) ProtoMessage() {}

func (x *Usage) ProtoReflect() protoreflect.Message {
	mi := &file_shared_shared_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Usage.ProtoReflect.Descriptor instead.
func (*Usage) Descriptor() ([]byte, []int) {
	return file_shared_shared_proto_rawDescGZIP(), []int{8}
}

func (x *Usage) GetCpuHealth() int32 {
	if x != nil {
		return x.CpuHealth
	}
	return 0
}

func (x *Usage) GetMemoryHealth() int32 {
	if x != nil {
		return x.MemoryHealth
	}
	return 0
}

type EmptyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	mi := &file_shared_shared_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_shared_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_shared_shared_proto_rawDescGZIP(), []int{9}
}

var File_shared_shared_proto protoreflect.FileDescriptor

const file_shared_shared_proto_rawDesc = "" +
	"\n" +
	"\x13shared/shared.proto\x12\bselfcare\"\x8f\x02\n" +
	"\fRouterStatic\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04ssid\x18\x02 \x01(\tR\x04ssid\x12\x1f\n" +
	"\vmac_address\x18\x03 \x01(\tR\n" +
	"macAddress\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x04 \x01(\tR\tipAddress\x12\"\n" +
	"\fmanufacturer\x18\x05 \x01(\tR\fmanufacturer\x12#\n" +
	"\rsecurity_type\x18\x06 \x01(\tR\fsecurityType\x12#\n" +
	"\rserial_number\x18\a \x01(\tR\fserialNumber\x12\x14\n" +
	"\x05model\x18\b \x01(\tR\x05model\x12\x17\n" +
	"\ais_main\x18\t \x01(\bR\x06isMain\"\xb7\x01\n" +
	"\rRouterDynamic\x12+\n" +
	"\x11connected_devices\x18\x01 \x01(\x05R\x10connectedDevices\x12\x12\n" +
	"\x04rssi\x18\x02 \x01(\x05R\x04rssi\x12%\n" +
	"\x0erouter_channel\x18\x03 \x03(\x05R\rrouterChannel\x12>\n" +
	"\x1bsupported_connected_devices\x18\x04 \x01(\bR\x19supportedConnectedDevices\"}\n" +
	"\x06Router\x127\n" +
	"\vstatic_info\x18\x01 \x01(\v2\x16.selfcare.RouterStaticR\n" +
	"staticInfo\x12:\n" +
	"\fdynamic_info\x18\x02 \x01(\v2\x17.selfcare.RouterDynamicR\vdynamicInfo\"\xee\x01\n" +
	"\fDeviceStatic\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04ssid\x18\x02 \x01(\tR\x04ssid\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x03 \x01(\tR\tipAddress\x12\x1f\n" +
	"\vmac_address\x18\x04 \x01(\tR\n" +
	"macAddress\x12%\n" +
	"\x0eaddress_source\x18\x05 \x01(\tR\raddressSource\x12\x1c\n" +
	"\tinterface\x18\x06 \x01(\tR\tinterface\x125\n" +
	"\vtype_device\x18\a \x01(\x0e2\x14.selfcare.TypeDeviceR\n" +
	"typeDevice\"\xb3\x01\n" +
	"\rDeviceDynamic\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12\x12\n" +
	"\x04rssi\x18\x02 \x01(\x05R\x04rssi\x12!\n" +
	"\fupload_speed\x18\x03 \x01(\tR\vuploadSpeed\x12%\n" +
	"\x0edownload_speed\x18\x04 \x01(\tR\rdownloadSpeed\x12'\n" +
	"\x0fconnection_type\x18\x05 \x01(\tR\x0econnectionType\"}\n" +
	"\x06Device\x127\n" +
	"\vstatic_info\x18\x01 \x01(\v2\x16.selfcare.DeviceStaticR\n" +
	"staticInfo\x12:\n" +
	"\fdynamic_info\x18\x02 \x01(\v2\x17.selfcare.DeviceDynamicR\vdynamicInfo\"Q\n" +
	"\n" +
	"DeviceHome\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12\x12\n" +
	"\x04rssi\x18\x02 \x01(\x05R\x04rssi\x12\x12\n" +
	"\x04ssid\x18\x03 \x01(\tR\x04ssid\";\n" +
	"\x05Speed\x12\x1a\n" +
	"\bdownload\x18\x01 \x01(\tR\bdownload\x12\x16\n" +
	"\x06upload\x18\x02 \x01(\tR\x06upload\"K\n" +
	"\x05Usage\x12\x1d\n" +
	"\n" +
	"cpu_health\x18\x01 \x01(\x05R\tcpuHealth\x12#\n" +
	"\rmemory_health\x18\x02 \x01(\x05R\fmemoryHealth\"\x0e\n" +
	"\fEmptyRequest*=\n" +
	"\n" +
	"TypeDevice\x12\t\n" +
	"\x05phone\x10\x00\x12\n" +
	"\n" +
	"\x06tablet\x10\x01\x12\f\n" +
	"\bsmart_tv\x10\x02\x12\n" +
	"\n" +
	"\x06laptop\x10\x03B\x10Z\x0epkg/gen/sharedb\x06proto3"

var (
	file_shared_shared_proto_rawDescOnce sync.Once
	file_shared_shared_proto_rawDescData []byte
)

func file_shared_shared_proto_rawDescGZIP() []byte {
	file_shared_shared_proto_rawDescOnce.Do(func() {
		file_shared_shared_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_shared_shared_proto_rawDesc), len(file_shared_shared_proto_rawDesc)))
	})
	return file_shared_shared_proto_rawDescData
}

var file_shared_shared_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_shared_shared_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_shared_shared_proto_goTypes = []any{
	(TypeDevice)(0),       // 0: selfcare.TypeDevice
	(*RouterStatic)(nil),  // 1: selfcare.RouterStatic
	(*RouterDynamic)(nil), // 2: selfcare.RouterDynamic
	(*Router)(nil),        // 3: selfcare.Router
	(*DeviceStatic)(nil),  // 4: selfcare.DeviceStatic
	(*DeviceDynamic)(nil), // 5: selfcare.DeviceDynamic
	(*Device)(nil),        // 6: selfcare.Device
	(*DeviceHome)(nil),    // 7: selfcare.DeviceHome
	(*Speed)(nil),         // 8: selfcare.Speed
	(*Usage)(nil),         // 9: selfcare.Usage
	(*EmptyRequest)(nil),  // 10: selfcare.EmptyRequest
}
var file_shared_shared_proto_depIdxs = []int32{
	1, // 0: selfcare.Router.static_info:type_name -> selfcare.RouterStatic
	2, // 1: selfcare.Router.dynamic_info:type_name -> selfcare.RouterDynamic
	0, // 2: selfcare.DeviceStatic.type_device:type_name -> selfcare.TypeDevice
	4, // 3: selfcare.Device.static_info:type_name -> selfcare.DeviceStatic
	5, // 4: selfcare.Device.dynamic_info:type_name -> selfcare.DeviceDynamic
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_shared_shared_proto_init() }
func file_shared_shared_proto_init() {
	if File_shared_shared_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_shared_shared_proto_rawDesc), len(file_shared_shared_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shared_shared_proto_goTypes,
		DependencyIndexes: file_shared_shared_proto_depIdxs,
		EnumInfos:         file_shared_shared_proto_enumTypes,
		MessageInfos:      file_shared_shared_proto_msgTypes,
	}.Build()
	File_shared_shared_proto = out.File
	file_shared_shared_proto_goTypes = nil
	file_shared_shared_proto_depIdxs = nil
}
